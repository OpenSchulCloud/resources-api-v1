swagger: '2.0'
info:
  description: |
    This is the specification for the content of Schul-Cloud.
    You can find more information in the [repository](https://github.com/schul-cloud/resources-api-v1).
  version: 1.0.0
  title: Schul-Cloud Content API
  termsOfService: http://swagger.io/terms/
  contact:
    name: Schul-Cloud Development Team
    url: https://schul-cloud.github.io
  license:
    name: AGPL
    url: https://github.com/schul-cloud/resources-api-v1/blob/master/LICENSE
tags:
- name: resource
  description: learning resources
  externalDocs:
    description: Find out more
    url: "https://github.com/schul-cloud/resources-api-v1#objects"
paths:
  /resources/ids: # http://jsonapi.org/format/#fetching-resources
    get:
      tags:
      - resource
      summary: Get the ids of all resources of the client
      operationId: getResourceIds
      produces:
      - application/vnd.api+json
      responses:
        200: # http://jsonapi.org/format/#fetching-resources-responses
          description: Resources are listed.
          schema:
            $ref: "#/definitions/ResourceIdsResponse"
        401:
          description: "Unauthorized: The client could not be authorized using the sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Servers MUST respond with a 406 Not Acceptable status code if a request’s Accept header contains the JSON API media type and all instances of that media type are modified with media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Servers MUST respond with a 415 Unsupported Media Type status code if a request specifies the header Content-Type: application/vnd.api+json with any media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
  /resources:
    post:
      tags:
      - resource
      summary: Add new resources to the database
      operationId: addResource
      consumes:
      - application/vnd.api+json
      produces:
      - application/vnd.api+json
      parameters:
      - in: body
        name: body
        description: "A resource to add"
        required: true
        schema:
          $ref: '#/definitions/ResourcePost'
      responses:
        201: # http://jsonapi.org/format/#crud-creating-responses
             # http://swagger.io/specification/#responseObject
          description: "The resource has beed created."
          headers: # http://swagger.io/specification/#headersObject
            Location:
              type: string
              description: "The response SHOULD include a Location header identifying the location of the newly created resource."
          schema:
            $ref: "#/definitions/ResourceResponse"
        400:
          description: "Bad Request: The input provided is not valid JSON."
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized: The client could not be authorized using the sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        403: # http://jsonapi.org/format/#crud-creating-client-ids
          description: "A server MUST return 403 Forbidden in response to an unsupported request to create a resource with a client-generated ID."
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Servers MUST respond with a 406 Not Acceptable status code if a request’s Accept header contains the JSON API media type and all instances of that media type are modified with media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Servers MUST respond with a 415 Unsupported Media Type status code if a request specifies the header Content-Type: application/vnd.api+json with any media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Unprocessable Entity: The schema of the object provided is not a resource."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
    delete:
      tags:
      - resource
      summary: Delete all resources
      operationId: deleteResources
      produces:
      - application/vnd.api+json
      responses:
        204: # 204 No Content # http://jsonapi.org/format/#crud-deleting-responses-204
          description: "No Content: The resources have been deleted"
        401:
          description: "Unauthorized: The client could not be authorized using the sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
  /resources/{resourceId}:
    get:
      tags:
      - resource
      summary: Get a resource.
      operationId: getResource
      produces:
      - application/vnd.api+json
      parameters:
      - name: resourceId
        in: path
        description: "ID of resource that needs to be fetched"
        required: true
        type: string
      responses:
        200:
          description: Resources are listed.
          schema:
            $ref: '#/definitions/ResourceResponse'
        401:
          description: "Unauthorized: The client could not be authorized using the sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "No resource with this id was found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Servers MUST respond with a 406 Not Acceptable status code if a request’s Accept header contains the JSON API media type and all instances of that media type are modified with media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Servers MUST respond with a 415 Unsupported Media Type status code if a request specifies the header Content-Type: application/vnd.api+json with any media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
    delete:
      tags:
      - resource
      summary: Delete a resource
      operationId: deleteResource
      parameters:
      - name: resourceId
        in: path
        description: "ID of resource that needs to be fetched"
        required: true
        type: string
      produces:
      - application/vnd.api+json
      responses:
        204: # http://jsonapi.org/format/#crud-deleting
          description: "No Content: Resources are listed."
        401:
          description: "Unauthorized: The client could not be authorized using the sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "No resource with this id was found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization # This is a header.
    in: header
    description: |
      The server may have security keys for specially trusted applications.
      The Authorization header field includes the identifier 'api-key' and
      the base64 encoded api key.
  basic:
    type: basic
    description: authenticate agains a pre-set authentication provider
definitions:
  Jsonapi:
    type: object
    description: "an object describing the server’s implementation"
    required:
    - version
    - meta
    properties:
      version:
        type: string
        description: "The version of the jsonapi which is supported http://jsonapi.org/format/#document-jsonapi-object"
        enum: ["1.0"]
      meta:
        type: object
        description: "Meta information about the server and the implementation."
        required:
        - name
        - source
        - description
        properties:
          name:
            type: string
            description: "The name of the server."
            example: "test server"
          source:
            type: string
            description: "The implementation of ther server, i.e. the repository."
            example: "https://github.com/schul-cloud/schul_cloud_resources_server_tests"
          description:
            type: string
            description: "A description of the server."
            example: "This is a test server to use for continuous integration."
  ResourceResponse:
    type: object
    description: "The posted object http://jsonapi.org/format/#crud-creating-responses"
    required:
    - jsonapi
    - links
    - data
    properties:
      jsonapi:
        $ref: "#/definitions/Jsonapi"
      links:
        type: object
        required:
        - self
        properties:
          self:
            type: string
            description: "The url to the resource."
      data: # http://jsonapi.org/format/#document-resource-objects
        type: object
        required:
        - id
        - type
        - attributes
        properties:
          id:
            description: "The id of the object."
            type: string
            example: "1"
          type:
            description: "The type of the object"
            type: string
            example: "resource"
            enum:
            - "resource"
          attributes:
            $ref: "#/definitions/Resource"
  ResourcePost:
    type: object
    required:
    - data
    properties:
      data:
        type: object
        required:
        - type
        - attributes
        properties:
          type:
            $ref: "#/definitions/ResourceType"
          attributes:
            $ref: "#/definitions/Resource"
          id:
            type: string
            pattern: "([!*\"'(),+a-zA-Z0-9$_@.&+\\-])+"
            example: "cornelsen-physics-1"
            description: "The id of the object which should be used instead of a generated id by the service. This includes everything you can put into the url path without the \"/\" and \"%HH\" hexadecimal encoded characters. The characters are specified in the url standard as \"segment\" https://www.w3.org/Addressing/URL/url-spec.txt page 14/15"
  ResourceType:
    type: string
    description: "The type of the resource."
    enum:  
    - "resource"
  Resource:
    type: object
    description: "$ref: \"https://github.com/schul-cloud/resources-api-v1/raw/master/schemas/resource/resource.json\""
    example:
      title: "Example Website"
      url: "https://example.org"
      licenses: []
      mimeType: "text/html"
      contentCategory: "l"
      languages: ["en-en"]
      thumbnail: "http://cache.schul-cloud.org/thumbs/k32164876328764872384.jpg"
  ResourceIdsResponse:
    type: object
    required:
    - data
    - links
    - jsonapi
    properties:
      jsonapi:
        $ref: "#/definitions/Jsonapi"
      links:
        type: object
        required:
        - self
        properties:
          self:
            type: string
            description: "The url to the listing."
            pattern: ".*/resources/ids"
            example: "http://schul-cloud.org/resources/ids"
      data:
        type: array
        items:
          type: object # http://jsonapi.org/format/#document-resource-objects
          required:
          - type
          - id
          properties:
            type:
              type: string
              description: "The type is an id."
              enum:
              - "id"
            id:
              type: string
              description: "The id of the resource."
              example: "1"
  ErrorResponse:
    type: object
    required:
    - errors
    - jsonapi
    properties:
      jsonapi:
        $ref: "#/definitions/Jsonapi"
      errors:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/ErrorElement"
  ErrorElement:
    description: "A JSONAPI error. http://jsonapi.org/format/#errors"
    type: object
    required:
    - status
    - title
    - detail
    properties:
      status:
        type: integer
        description: "The error code as defined on this page: https://httpstatuses.com/"
        example: 401
      title:
        type: string
        description: "The error name as defined on this page: https://httpstatuses.com/"
        example: "Unauthozied"
      detail:
        type: string
        description: "A human readable description on what caused the error and how to remove it."
        example: "Username or password are invalid."
externalDocs:
  description: Find out more about the API
  url: https://github.com/schul-cloud/resources-api-v1
host: scrst.quelltext.eu
basePath: /v1
schemes:
- http
- https
